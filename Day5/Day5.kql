// Construct a dynamic KQL that I'll run afterwards to get the result
let isReversed = bool(1); // Part = 1, Part2 = 0
let Crane = print Order = 0, DynamicCode = "let CraneInline = datatable (Col1:string, Col2:string, Col3:string, Col4:string, Col5:string, Col6:string, Col7:string ,Col8:string ,Col9:string, CrossJoin:int)[    'MJCBFRLH' , 'ZCD' , 'HJFCNGW' , 'PJDMTSB' , 'NCDRJ' , 'WLDQPJGZ' , 'PZTFRH' , 'LVMG' , 'CBGPFQRJ', 1];\nCraneInline";
let Concat = print Order = 10000, DynamicCode = "| extend Result = strcat(substring(Col1, -1, 1), substring(Col2, -1, 1), substring(Col3, -1, 1), substring(Col4, -1, 1), substring(Col5, -1, 1), substring(Col6, -1, 1), substring(Col7, -1, 1),substring(Col8, -1, 1),substring(Col9, -1, 1))\n| project-keep Result";
Crane
| union
(
    Day5
    | parse Instruction with  * "move " CrateCount " from " FromCol " to " ToCol
    | project-away Instruction
    | serialize 
    | extend
        Order = row_number()
        , DynamicCode = strcat('| extend Col', ToCol, '  = strcat(Col', ToCol, ', ', iif(isReversed, 'reverse(', ''), 'substring(Col', FromCol, ', ', CrateCount, ' * -1)', iif(isReversed, ')', ''), '), Col', FromCol, ' = substring(Col', FromCol, ', 0, strlen(Col', FromCol, ') - ', CrateCount, ')')
    | project-keep Order, DynamicCode
)
, Concat // unioning the final transformation
| order by Order asc
| summarize DynamicCode = strcat_array(make_list(DynamicCode), "\n")