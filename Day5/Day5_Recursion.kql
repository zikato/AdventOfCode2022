Day5
| parse Instruction with  * "move " CrateCount:int " from " FromCol:int " to " ToCol:int
| extend 
      Col1 = 'MJCBFRLH'
    , Col2 = 'ZCD'
    , Col3 = 'HJFCNGW'
    , Col4 = 'PJDMTSB' 
    , Col5 = 'NCDRJ' 
    , Col6 = 'WLDQPJGZ' 
    , Col7 = 'PZTFRH' 
    , Col8 = 'LVMG' 
    , Col9 = 'CBGPFQRJ'
| serialize 
| project-away Instruction
| extend
    Order = row_number()
| scan with_match_id=m_id with
(
// bag_set_key or bag_merge is not supported in scan operator; Column_ifexists requires a constant. 
// There was no way to refer to the correct column dynamically, so I had to do all the combinations
    step s1 output=last: true => 
          Col1 = case(ToCol == 1 , strcat(iif(Order == 1, Col1, s1.Col1), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 1 , substring(iif(Order == 1, Col1, s1.Col1), 0, strlen(iif(Order == 1, Col1, s1.Col1)) - CrateCount), iif(Order == 1, Col1, s1.Col1))
        , Col2 = case(ToCol == 2 , strcat(iif(Order == 1, Col2, s1.Col2), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 2 , substring(iif(Order == 1, Col2, s1.Col2), 0, strlen(iif(Order == 1, Col2, s1.Col2)) - CrateCount), iif(Order == 1, Col2, s1.Col2))
        , Col3 = case(ToCol == 3 , strcat(iif(Order == 1, Col3, s1.Col3), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 3 , substring(iif(Order == 1, Col3, s1.Col3), 0, strlen(iif(Order == 1, Col3, s1.Col3)) - CrateCount), iif(Order == 1, Col3, s1.Col3))
        , Col4 = case(ToCol == 4 , strcat(iif(Order == 1, Col4, s1.Col4), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 4 , substring(iif(Order == 1, Col4, s1.Col4), 0, strlen(iif(Order == 1, Col4, s1.Col4)) - CrateCount), iif(Order == 1, Col4, s1.Col4))
        , Col5 = case(ToCol == 5 , strcat(iif(Order == 1, Col5, s1.Col5), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 5 , substring(iif(Order == 1, Col5, s1.Col5), 0, strlen(iif(Order == 1, Col5, s1.Col5)) - CrateCount), iif(Order == 1, Col5, s1.Col5))
        , Col6 = case(ToCol == 6 , strcat(iif(Order == 1, Col6, s1.Col6), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 6 , substring(iif(Order == 1, Col6, s1.Col6), 0, strlen(iif(Order == 1, Col6, s1.Col6)) - CrateCount), iif(Order == 1, Col6, s1.Col6))
        , Col7 = case(ToCol == 7 , strcat(iif(Order == 1, Col7, s1.Col7), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 7 , substring(iif(Order == 1, Col7, s1.Col7), 0, strlen(iif(Order == 1, Col7, s1.Col7)) - CrateCount), iif(Order == 1, Col7, s1.Col7))
        , Col8 = case(ToCol == 8 , strcat(iif(Order == 1, Col8, s1.Col8), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 8 , substring(iif(Order == 1, Col8, s1.Col8), 0, strlen(iif(Order == 1, Col8, s1.Col8)) - CrateCount), iif(Order == 1, Col8, s1.Col8))
        , Col9 = case(ToCol == 9 , strcat(iif(Order == 1, Col9, s1.Col9), substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount)), FromCol == 9 , substring(iif(Order == 1, Col9, s1.Col9), 0, strlen(iif(Order == 1, Col9, s1.Col9)) - CrateCount), iif(Order == 1, Col9, s1.Col9));
)
| extend Result = strcat(substring(Col1, -1, 1), substring(Col2, -1, 1), substring(Col3, -1, 1), substring(Col4, -1, 1), substring(Col5, -1, 1), substring(Col6, -1, 1), substring(Col7, -1, 1),substring(Col8, -1, 1),substring(Col9, -1, 1))
| project-keep Result

// Reverse substring
Day5
| parse Instruction with  * "move " CrateCount:int " from " FromCol:int " to " ToCol:int
| extend 
      Col1 = 'MJCBFRLH'
    , Col2 = 'ZCD'
    , Col3 = 'HJFCNGW'
    , Col4 = 'PJDMTSB' 
    , Col5 = 'NCDRJ' 
    , Col6 = 'WLDQPJGZ' 
    , Col7 = 'PZTFRH' 
    , Col8 = 'LVMG' 
    , Col9 = 'CBGPFQRJ'
| serialize 
| project-away Instruction
| extend
    Order = row_number()
| scan with_match_id=m_id with
(
    step s1 output=last: true => 
          Col1 = case(ToCol == 1 , strcat(iif(Order == 1, Col1, s1.Col1), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 1 , substring(iif(Order == 1, Col1, s1.Col1), 0, strlen(iif(Order == 1, Col1, s1.Col1)) - CrateCount), iif(Order == 1, Col1, s1.Col1))
        , Col2 = case(ToCol == 2 , strcat(iif(Order == 1, Col2, s1.Col2), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 2 , substring(iif(Order == 1, Col2, s1.Col2), 0, strlen(iif(Order == 1, Col2, s1.Col2)) - CrateCount), iif(Order == 1, Col2, s1.Col2))
        , Col3 = case(ToCol == 3 , strcat(iif(Order == 1, Col3, s1.Col3), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 3 , substring(iif(Order == 1, Col3, s1.Col3), 0, strlen(iif(Order == 1, Col3, s1.Col3)) - CrateCount), iif(Order == 1, Col3, s1.Col3))
        , Col4 = case(ToCol == 4 , strcat(iif(Order == 1, Col4, s1.Col4), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 4 , substring(iif(Order == 1, Col4, s1.Col4), 0, strlen(iif(Order == 1, Col4, s1.Col4)) - CrateCount), iif(Order == 1, Col4, s1.Col4))
        , Col5 = case(ToCol == 5 , strcat(iif(Order == 1, Col5, s1.Col5), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 5 , substring(iif(Order == 1, Col5, s1.Col5), 0, strlen(iif(Order == 1, Col5, s1.Col5)) - CrateCount), iif(Order == 1, Col5, s1.Col5))
        , Col6 = case(ToCol == 6 , strcat(iif(Order == 1, Col6, s1.Col6), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 6 , substring(iif(Order == 1, Col6, s1.Col6), 0, strlen(iif(Order == 1, Col6, s1.Col6)) - CrateCount), iif(Order == 1, Col6, s1.Col6))
        , Col7 = case(ToCol == 7 , strcat(iif(Order == 1, Col7, s1.Col7), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 7 , substring(iif(Order == 1, Col7, s1.Col7), 0, strlen(iif(Order == 1, Col7, s1.Col7)) - CrateCount), iif(Order == 1, Col7, s1.Col7))
        , Col8 = case(ToCol == 8 , strcat(iif(Order == 1, Col8, s1.Col8), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 8 , substring(iif(Order == 1, Col8, s1.Col8), 0, strlen(iif(Order == 1, Col8, s1.Col8)) - CrateCount), iif(Order == 1, Col8, s1.Col8))
        , Col9 = case(ToCol == 9 , strcat(iif(Order == 1, Col9, s1.Col9), reverse(substring(case(FromCol == 1, iif(Order == 1, Col1, s1.Col1), FromCol == 2, iif(Order == 1, Col2, s1.Col2), FromCol == 3, iif(Order == 1, Col3, s1.Col3), FromCol == 4, iif(Order == 1, Col4, s1.Col4), FromCol == 5, iif(Order == 1, Col5, s1.Col5), FromCol == 6, iif(Order == 1, Col6, s1.Col6), FromCol == 7, iif(Order == 1, Col7, s1.Col7), FromCol == 8, iif(Order == 1, Col8, s1.Col8), FromCol == 9, iif(Order == 1, Col9, s1.Col9),  ""), -1 * CrateCount))), FromCol == 9 , substring(iif(Order == 1, Col9, s1.Col9), 0, strlen(iif(Order == 1, Col9, s1.Col9)) - CrateCount), iif(Order == 1, Col9, s1.Col9));
)
| extend Result = strcat(substring(Col1, -1, 1), substring(Col2, -1, 1), substring(Col3, -1, 1), substring(Col4, -1, 1), substring(Col5, -1, 1), substring(Col6, -1, 1), substring(Col7, -1, 1),substring(Col8, -1, 1),substring(Col9, -1, 1))
| project-keep Result